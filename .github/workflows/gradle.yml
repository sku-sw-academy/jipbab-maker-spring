name: Java CI with Gradle, CD automate

on:
  push:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:8.3
        ports:
          - 3306:3306
        env:
          MYSQL_ROOT_PASSWORD: 1q2w3e4r
          MYSQL_DATABASE: splim
        options: --health-cmd="mysqladmin ping --silent" --health-interval=10s --health-timeout=5s --health-retries=3

    permissions:
      contents: read

    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@417ae3ccd767c252f5661f1ace9f835f9654f2b5

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build with Gradle Wrapper
        run: ./gradlew build

      - name: Build Docker image
        run: docker build -t jun73/jipbab:latest .

      - name: Log in to DockerHub
        run: echo "${{ secrets.DOCKER_HUB_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_HUB_USERNAME }}" --password-stdin

      - name: Push Docker image
        run: docker push jun73/jipbab:latest

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan 210.178.40.81 >> ~/.ssh/known_hosts

      - name: Stop and remove any container using port 8080
        run: |
          ssh -i ~/.ssh/id_rsa centos@210.178.40.81 "
          docker ps -q --filter 'publish=8080' | xargs -r docker stop;
          docker ps -a -q --filter 'publish=8080' | xargs -r docker rm;
          "

      - name: Deploy to server
        run: ssh -i ~/.ssh/id_rsa centos@210.178.40.81 "docker pull jun73/jipbab:latest && docker stop jipbab || true && docker rm jipbab || true && docker run -d --name jipbab -p 8080:8080 jun73/jipbab:latest"
        env:
          SPRING_DATASOURCE_URL: jdbc:mysql://db-mysql:3306/splim?serverTimezone=Asia/Seoul
          SPRING_DATASOURCE_USERNAME: root
          SPRING_DATASOURCE_PASSWORD: 1q2w3e4r
